{"version":3,"sources":["utils/fetcher.ts","utils/settings.ts","Components/NamesList.tsx","Components/PokemonNamesList.tsx","App.tsx","index.tsx"],"names":["get","url","axios","then","res","data","settings","NamesList","names","map","name","PokemonNamesList","React","useState","urlToFetch","setUrlToFetch","pokemonNames","useRef","useSWR","error","current","results","info","onClick","previous","disabled","next","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAEaA,EAAM,SAAIC,GAAJ,OAAoBC,IAAMF,IAAOC,GAAKE,MAAK,SAACC,GAAD,OAASA,EAAIC,SCF9DC,EACF,4B,OCDEC,EAAY,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAC1B,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,6BAAgBA,GAAPA,SCEJC,EAAmB,WAC9B,MAAoCC,IAAMC,SAAN,UAAkBP,EAAlB,aAApC,mBAAOQ,EAAP,KAAmBC,EAAnB,KACMC,EAAeJ,IAAMK,OAAiB,IAC5C,EAAsBC,YAA2BJ,EAAYd,GAAvDK,EAAN,EAAMA,KAEN,GAFA,EAAYc,MAED,OAAO,yCAEdd,IACFW,EAAaI,QAAUf,EAAKgB,QAAQZ,KAAI,SAACa,GAAD,OAAUA,EAAKZ,SAezD,OACE,qCACE,oDACA,cAAC,EAAD,CAAWF,MAAOQ,EAAaI,UAC/B,gCACE,wBAAQG,QAjBM,YAClB,OAAIlB,QAAJ,IAAIA,OAAJ,EAAIA,EAAMmB,WACRT,EAAcV,EAAKmB,WAeaC,WAAU,OAACpB,QAAD,IAACA,OAAD,EAACA,EAAMmB,UAA/C,kBAGA,wBAAQD,QAdM,YAClB,OAAIlB,QAAJ,IAAIA,OAAJ,EAAIA,EAAMqB,OACRX,EAAcV,EAAKqB,OAYaD,WAAU,OAACpB,QAAD,IAACA,OAAD,EAACA,EAAMqB,MAA/C,yBC/BOC,MAJf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bee0388d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const get = <T>(url: string) => axios.get<T>(url).then((res) => res.data);\n","export const settings = {\n  restApi: 'https://pokeapi.co/api/v2',\n};\n","export const NamesList = ({ names }: { names: string[] }): JSX.Element => {\n  return (\n    <ul>\n      {names.map((name) => (\n        <li key={name}>{name}</li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport useSWR from 'swr';\nimport { get } from '../utils/fetcher';\nimport { settings } from '../utils/settings';\nimport { NamesList } from './NamesList';\n\nexport const PokemonNamesList = (): JSX.Element => {\n  const [urlToFetch, setUrlToFetch] = React.useState(`${settings.restApi}/pokemon`);\n  const pokemonNames = React.useRef<string[]>([]);\n  let { data, error } = useSWR<IAllPokemonApiInfo>(urlToFetch, get);\n\n  if (error) return <div>Error!</div>;\n\n  if (data) {\n    pokemonNames.current = data.results.map((info) => info.name);\n  }\n\n  const onPressPrev = (): void => {\n    if (data?.previous) {\n      setUrlToFetch(data.previous);\n    }\n  };\n\n  const onPressNext = (): void => {\n    if (data?.next) {\n      setUrlToFetch(data.next);\n    }\n  };\n\n  return (\n    <>\n      <h1>Pokemon names list</h1>\n      <NamesList names={pokemonNames.current} />\n      <div>\n        <button onClick={onPressPrev} disabled={!data?.previous}>\n          Prev\n        </button>\n        <button onClick={onPressNext} disabled={!data?.next}>\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n","import { PokemonNamesList } from './Components/PokemonNamesList';\n\nfunction App() {\n  return <PokemonNamesList />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}